Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".MainActivity\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/textTest\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Hello World!\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/button\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Button\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.529\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.292\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main.xml	(revision e0f0c49bcb02415053121ca20c691e060b0538bf)
+++ app/src/main/res/layout/activity_main.xml	(date 1658407060450)
@@ -6,26 +6,9 @@
     android:layout_height="match_parent"
     tools:context=".MainActivity">
 
-    <TextView
-        android:id="@+id/textTest"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="Hello World!"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent" />
-
-    <Button
-        android:id="@+id/button"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:text="Button"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintHorizontal_bias="0.529"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintVertical_bias="0.292" />
-
+    <com.mapbox.mapboxsdk.maps.MapView
+        android:id="@+id/mapview"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+    </com.mapbox.mapboxsdk.maps.MapView>
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/eventsapp/retrofit/ApiService.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.eventsapp.retrofit\r\n\r\nimport android.os.Build\r\nimport android.util.TimeUtils\r\nimport androidx.annotation.RequiresApi\r\nimport com.eventsapp.models.AllEvents\r\nimport com.eventsapp.models.EventID\r\nimport com.eventsapp.models.GeocodingLocation\r\nimport retrofit2.Response\r\nimport retrofit2.http.GET\r\nimport retrofit2.http.Headers\r\nimport retrofit2.http.Path\r\n\r\n\r\n\r\n@RequiresApi(Build.VERSION_CODES.O)\r\ninterface ApiService {\r\n\r\n    @Headers(\"Accept: application/json\",\r\n        \"Authorization: Bearer 9c656d513c21316fdc77e5ff886cfc0f0e6f1f03\")\r\n    @GET(\"events?starts_at_max={timestamp}&cities=Москва\")\r\n    suspend fun getEvents(@Path(\"timestamp\") timeStamp: String): Response<AllEvents>\r\n\r\n    @Headers(\"Accept: application/json\",\r\n        \"Authorization: Bearer 9c656d513c21316fdc77e5ff886cfc0f0e6f1f03\")\r\n    @GET(\"events/{event_id}\")\r\n    suspend fun getEventID(@Path(\"event_id\") id: Int?): Response<EventID>\r\n\r\n    @GET(\"geocoding/v5/mapbox.places/{urlencode}.json?country=ru&limit=1&proximity=ip&types=place%2Cpostcode%2Caddress&access_token=pk.eyJ1Ijoidm9jYWxpbnRlcm5ldCIsImEiOiJjbDVyeXE4NGQwaTZoM2puMGY5am1xbnRoIn0.PV25RxZ_UUxxZx7Y5fbkoA\")\r\n    suspend fun getCoordsLocation(@Path(\"urlencode\") address: String?): Response<GeocodingLocation>\r\n\r\n\r\n}\r\n//curl \"https://api.mapbox.com/geocoding/v5/mapbox.places/%D0%BF%D0%B5%D1%82%D1%83%D1%88%D0%BA%D0%B8.json?country=ru&limit=1&proximity=ip&types=place%2Cpostcode%2Caddress&access_token=pk.eyJ1Ijoidm9jYWxpbnRlcm5ldCIsImEiOiJjbDVyeXE4NGQwaTZoM2puMGY5am1xbnRoIn0.PV25RxZ_UUxxZx7Y5fbkoA\"\r\n//{\"type\":\"FeatureCollection\",\"query\":[\"петушки\"],\"features\":[{\"id\":\"place.17322736563947470\",\"type\":\"Feature\",\"place_type\":[\"place\"],\"relevance\":1,\"properties\":{\"wikidata\":\"Q179372\"},\"text\":\"Петушки\",\"place_name\":\"Петушки, Петушинский район, Vladimir, Russia\",\"bbox\":[39.409553978,55.909932119,39.50563287,55.949836025],\"center\":[39.46667,55.93333],\"geometry\":{\"type\":\"Point\",\"coordinates\":[39.46667,55.93333]},\r\n// \"context\":[{\"id\":\"district.12594763086198480\",\"wikidata\":\"Q1654411\",\"text\":\"Петушинский район\"},\r\n// {\"id\":\"region.12166129145721350\",\"short_code\":\"RU-VLA\",\"wikidata\":\"Q2702\",\"text\":\"Vladimir\"},{\"id\":\"country.36095529422520\",\"wikidata\":\"Q159\",\"short_code\":\"ru\",\"text\":\"Russia\"}]}],\"attribution\":\"NOTICE: © 2022 Mapbox and its suppliers. All rights reserved. Use of this data is subject to the Mapbox Terms of Service (https://www.mapbox.com/about/maps/). This response and the information it contains may not be retained. POI(s) provided by Foursquare.\"}\r\n\r\n\r\n//curl -X GET \"https://api.timepad.ru/v1/events?starts_at_max=2022-07-21&cities=Москва\"\r\n// -H  \"accept: application/json\" -H \"Authorization: Bearer 9c656d513c21316fdc77e5ff886cfc0f0e6f1f03\"
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/eventsapp/retrofit/ApiService.kt	(revision e0f0c49bcb02415053121ca20c691e060b0538bf)
+++ app/src/main/java/com/eventsapp/retrofit/ApiService.kt	(date 1658404078056)
@@ -18,8 +18,8 @@
 
     @Headers("Accept: application/json",
         "Authorization: Bearer 9c656d513c21316fdc77e5ff886cfc0f0e6f1f03")
-    @GET("events?starts_at_max={timestamp}&cities=Москва")
-    suspend fun getEvents(@Path("timestamp") timeStamp: String): Response<AllEvents>
+    @GET("events?starts_at_max={timestamp}&cities=Москва&limit=100&skip={skipInt}")
+    suspend fun getEvents(@Path("timestamp") timeStamp: String,@Path("skipInt") skipInt: Int?): Response<AllEvents>
 
     @Headers("Accept: application/json",
         "Authorization: Bearer 9c656d513c21316fdc77e5ff886cfc0f0e6f1f03")
Index: app/src/main/java/com/eventsapp/models/GeocodingLocation.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.eventsapp.models\r\n\r\ndata class GeocodingLocation(\r\n    val attribution: String,\r\n    val features: List<Feature>,\r\n    val query: List<String>,\r\n    val type: String\r\n)\r\n\r\ndata class Feature(\r\n    val bbox: List<Double>,\r\n    val center: List<Double>,\r\n    val context: List<Context>,\r\n    val geometry: Geometry,\r\n    val id: String,\r\n    val place_name: String,\r\n    val place_type: List<String>,\r\n    val properties: Properties,\r\n    val relevance: Int,\r\n    val text: String,\r\n    val type: String\r\n)\r\n\r\ndata class Context(\r\n    val id: String,\r\n    val short_code: String,\r\n    val text: String,\r\n    val wikidata: String\r\n)\r\n\r\ndata class Geometry(\r\n    val coordinates: List<Double>,\r\n    val type: String\r\n)\r\n\r\ndata class Properties(\r\n    val wikidata: String\r\n)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/eventsapp/models/GeocodingLocation.kt	(revision e0f0c49bcb02415053121ca20c691e060b0538bf)
+++ app/src/main/java/com/eventsapp/models/GeocodingLocation.kt	(date 1658406876410)
@@ -8,7 +8,7 @@
 )
 
 data class Feature(
-    val bbox: List<Double>,
+    val bbox: List<Double>, //координаты
     val center: List<Double>,
     val context: List<Context>,
     val geometry: Geometry,
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n    id 'org.jetbrains.kotlin.android'\r\n    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'\r\n}\r\n\r\nandroid {\r\n    compileSdk 32\r\n\r\n    defaultConfig {\r\n        applicationId \"com.eventsapp\"\r\n        minSdk 21\r\n        targetSdk 32\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n            viewBinding.enabled true\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = '1.8'\r\n    }\r\n    buildToolsVersion '30.0.3'\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation 'androidx.core:core-ktx:1.8.0'\r\n    implementation 'androidx.appcompat:appcompat:1.4.2'\r\n    implementation 'com.google.android.material:material:1.6.1'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'\r\n    testImplementation 'junit:junit:4.13.2'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\r\n    implementation 'com.squareup.retrofit2:retrofit:2.9.0'\r\n    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'\r\n    implementation 'com.squareup.okhttp3:logging-interceptor:4.5.0'\r\n    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1'\r\n    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.1'\r\n    implementation \"androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.0\"\r\n\r\n    implementation 'com.github.bumptech.glide:glide:4.13.2'\r\n    annotationProcessor 'com.github.bumptech.glide:compiler:4.13.2'\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision e0f0c49bcb02415053121ca20c691e060b0538bf)
+++ app/build.gradle	(date 1658407968754)
@@ -53,4 +53,11 @@
 
     implementation 'com.github.bumptech.glide:glide:4.13.2'
     annotationProcessor 'com.github.bumptech.glide:compiler:4.13.2'
+
+    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
+    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
+    implementation 'com.mapbox.mapboxsdk:mapbox-android-sdk:6.2.1'
+    testImplementation 'junit:junit:4.13.2'
+    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
+    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
 }
\ No newline at end of file
Index: app/src/main/java/com/eventsapp/models/EventID.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.eventsapp.models\r\n\r\nimport java.io.Serializable\r\n\r\ndata class EventID(\r\n    val access_status: String,\r\n    val ad_partner_percent: Int,\r\n    val age_limit: String,\r\n    //val categories: List<Category>,\r\n    val created_at: String,\r\n    val description_html: String,\r\n    val description_short: String,\r\n    val ends_at: String,\r\n    val id: Int,\r\n    val is_sending_free_tickets: Boolean,\r\n    val locale: String,\r\n    val location: Location,\r\n    val moderation_status: String,\r\n    val name: String,\r\n    val organization: Organization,\r\n    val properties: List<String>,\r\n    val questions: List<Question>,\r\n    val registration_data: RegistrationData,\r\n    val reservation_period: String,\r\n    val starts_at: String,\r\n    val status: String,\r\n    val ticket_types: List<TicketType>,\r\n    val tickets_limit: Int,\r\n    val url: String,\r\n    val widgets: Widgets\r\n) : Serializable\r\n\r\n//data class Category(\r\n//    val id: Int,\r\n//    val name: String\r\n//)\r\n\r\ndata class Location(\r\n    val address: String? = null,\r\n    val city: String? = null,\r\n    val country: String? = null\r\n) : Serializable\r\n\r\ndata class Organization(\r\n    val description_html: String,\r\n    val id: Int,\r\n    val logo_image: LogoImage,\r\n    val name: String,\r\n    val subdomain: String,\r\n    val url: String\r\n)\r\n\r\ndata class Question(\r\n    val field_id: String,\r\n    val is_for_every_visitor: Boolean,\r\n    val is_mandatory: Boolean,\r\n    val meta: Meta,\r\n    val name: String,\r\n    val type: String\r\n)\r\n\r\ndata class RegistrationData(\r\n    val is_registration_open: Boolean,\r\n    val price_max: Int,\r\n    val price_min: Int,\r\n    val sale_ends_at: String,\r\n    val tickets_total: Int\r\n)\r\n\r\ndata class TicketType(\r\n    val ad_partner_profit: Int,\r\n    val buy_amount_max: Int,\r\n    val buy_amount_min: Int,\r\n    val description: String,\r\n    val id: Int,\r\n    val is_active: Boolean,\r\n    val is_promocode_locked: Boolean,\r\n    val name: String,\r\n    val price: Int,\r\n    val remaining: Int,\r\n    val sale_ends_at: String,\r\n    val send_personal_links: Boolean,\r\n    val status: String\r\n)\r\n\r\ndata class Widgets(\r\n    val button: Button,\r\n    val custom: Custom\r\n)\r\n\r\ndata class LogoImage(\r\n    val default_url: String,\r\n    val uploadcare_url: String\r\n)\r\n\r\ndata class Meta(\r\n    val block: Boolean\r\n)\r\n\r\ndata class Button(\r\n    val code_html: String\r\n)\r\n\r\ndata class Custom(\r\n    val code_html: String\r\n)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/eventsapp/models/EventID.kt	(revision e0f0c49bcb02415053121ca20c691e060b0538bf)
+++ app/src/main/java/com/eventsapp/models/EventID.kt	(date 1658404078047)
@@ -30,10 +30,6 @@
     val widgets: Widgets
 ) : Serializable
 
-//data class Category(
-//    val id: Int,
-//    val name: String
-//)
 
 data class Location(
     val address: String? = null,
Index: app/src/main/java/com/eventsapp/retrofit/RetrofitServices.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.eventsapp.retrofit\r\n\r\nimport android.os.Build\r\nimport androidx.annotation.RequiresApi\r\nimport com.eventsapp.models.*\r\nimport retrofit2.Response\r\nimport java.net.URLEncoder\r\nimport java.time.Instant\r\nimport java.time.format.DateTimeFormatter\r\nimport java.util.concurrent.TimeUnit\r\n\r\nclass RetrofitServices{\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    val timeStamp: String = DateTimeFormatter.ofPattern(\"yyyy-MM-dd\").format(\r\n        Instant.now().plusSeconds(\r\n            TimeUnit.DAYS.toSeconds(1)))\r\n\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    suspend fun getEvents(): Response<AllEvents> {\r\n        return RetrofitClient.timepadApi.getEvents(timeStamp)\r\n    }\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    suspend fun getEventID(): Response<EventID> {\r\n        return RetrofitClient.timepadApi.getEventID(Value().id)\r\n    }\r\n    @RequiresApi(Build.VERSION_CODES.O)\r\n    suspend fun getCoordsLocation(): Response<GeocodingLocation> {\r\n        return RetrofitClient.mapboxApi.getCoordsLocation(URLEncoder.encode(Location().address, \"utf-8\").toString()\r\n        )\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/eventsapp/retrofit/RetrofitServices.kt	(revision e0f0c49bcb02415053121ca20c691e060b0538bf)
+++ app/src/main/java/com/eventsapp/retrofit/RetrofitServices.kt	(date 1658404078066)
@@ -14,10 +14,11 @@
     val timeStamp: String = DateTimeFormatter.ofPattern("yyyy-MM-dd").format(
         Instant.now().plusSeconds(
             TimeUnit.DAYS.toSeconds(1)))
+    var skipInt: Int? = 0
 
     @RequiresApi(Build.VERSION_CODES.O)
     suspend fun getEvents(): Response<AllEvents> {
-        return RetrofitClient.timepadApi.getEvents(timeStamp)
+        return RetrofitClient.timepadApi.getEvents(timeStamp, skipInt)
     }
     @RequiresApi(Build.VERSION_CODES.O)
     suspend fun getEventID(): Response<EventID> {
Index: local.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>## This file must *NOT* be checked into Version Control Systems,\r\n# as it contains information specific to your local configuration.\r\n#\r\n# Location of the SDK. This is only used by Gradle.\r\n# For customization when using a Version Control System, please read the\r\n# header note.\r\n#Mon Jul 18 14:45:09 GMT+03:00 2022\r\nsdk.dir=C\\:\\\\Users\\\\kayma\\\\AppData\\\\Local\\\\Android\\\\Sdk\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1251
===================================================================
--- local.properties	(revision e0f0c49bcb02415053121ca20c691e060b0538bf)
+++ local.properties	(date 1658407281782)
@@ -4,5 +4,5 @@
 # Location of the SDK. This is only used by Gradle.
 # For customization when using a Version Control System, please read the
 # header note.
-#Mon Jul 18 14:45:09 GMT+03:00 2022
-sdk.dir=C\:\\Users\\kayma\\AppData\\Local\\Android\\Sdk
+#Thu Jul 21 15:41:21 MSK 2022
+sdk.dir=C\:\\Users\\User\\AppData\\Local\\Android\\Sdk
